<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DescriptionInformationsWizard" xml:space="preserve">
    <value>Indiquez içi les informations concernant la mise à jour. Les champs en caractères gras sont obligatoires.

Editeur (Obligatoire) : C'est içi que vous définissez le nom de l'éditeur de la mise à jour. Par exemple : Oracle, Sun, Symantec, Adobe ...

Nom Du Produit (Obligatoire) : Nom du produit mis à jour. Par exemple : Java, Endpoint Protection 12, Flash Player ...

Titre (Obligatoire) : C'est içi que vous définissez le titre de la mise à jour. Par exemple : Java 6 update 31, Symantec Endpoint Protection 12.1 RU1 MP1, Flash Player 11.2.0.233...

Description (Facultatif) : Vous pouvez préciser içi des informations concernant la mise à jour. Tels que, les améliorations apportées, les bugs corrigés...

URL Plus d'Info (Facultatif) : Précisez içi une URL vers une page web donnant plus d'informations sur la mise à jour.

URL du Support (Facultatif) : Précisez içi une URL vers une page web du support.

Peut nécessiter une action de l'utilisateur : Cochez la case si la mise à jour peut requérire une intervention de l'utilisateur.

Nécessite une connexion réseau : Cochez la case si la mise à jour a besoin du réseau pour s'intaller.

Classification : 

Impact : 

Comportement de redémarrage : Précisez si la mise à jour à besoin ou non de redémarrer le poste pour finaliser son installation.

Id du bulletin de sécurité (Facultatif) : Précisez l'Id du bulletin de sécurité fourni par l'éditeur.

Sévérité Msrc (Facultatif) : Précisez le code Msrc fournis par l'éditeur.

Id CVE (Facultatif) : Précisez le code CVE fournis par l'éditeur.

Id de l'article KB (Facultatif) : Précisez le numéro de KB de l'article.


Cliquez sur 'Suivant' pour passer à la prochaine étape.</value>
  </data>
  <data name="DescriptionUpdateFileWizard" xml:space="preserve">
    <value>Indiquez içi le/les fichiers pour créer la mise à jour. Les champs en caractères gras sont obligatoires.

Fichier de mise à jour (Obligatoire) : Sélectionnez un fichier msi, msp ou exe qui correspond au binaire de la mise à jour.

Fichiers additionnels (Facultatif) : Sélectionnez un ou plusieurs fichiers nécessaire à l'application de la mise à jour. Par exemple des fichiers de configuration ou fichier de réponses.

Ligne de commande (Facultatif) : Indiquez un ou plusieurs paramètres pour le fichier de mise à jour. Par exemple /q, /s ou /silent. Pour les fichiers .msi il n'est pas nécessaire de préciser d'option pour rendre l'installation silencieuse. Wsus le fait automatiquement.


Cliquez sur 'Suivant' pour passer à la prochaine étape.</value>
  </data>
  <data name="openFileDialogueUpdateFile" xml:space="preserve">
    <value>Tous les fichiers accepté|*.msi;*.msp;*.exe|Fichiers MSI|*.msi|Fichiers MSP|*.msp|Fichiers EXE|*.exe</value>
  </data>
  <data name="RuleAnd" xml:space="preserve">
    <value>ET</value>
  </data>
  <data name="GroupEnd" xml:space="preserve">
    <value>&lt;Terminer </value>
  </data>
  <data name="RuleOR" xml:space="preserve">
    <value>OU</value>
  </data>
  <data name="GroupStart" xml:space="preserve">
    <value>&lt;Commencer </value>
  </data>
  <data name="ArrivalDate" xml:space="preserve">
    <value>Date d'arrivé</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titre</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Date de Création</value>
  </data>
  <data name="DescriptionIsInstallableWizard" xml:space="preserve">
    <value>Indiquez içi la/les règles qui permettrons aux clients de déterminer si la mise à jour est installable.

- Produit Msi installé : Vérifie dans la base de registre si le produit est déjà installé en ce basant sur le code MSI.
- Architecture du Processeur : Détermine si le processeur est de type x86, x64 ou IA64.



Cliquez sur 'Suivant' pour passer à la prochaine étape.</value>
  </data>
  <data name="DescriptionIsInstalledWizard" xml:space="preserve">
    <value>Indiquez içi la/les règles qui permettrons aux clients de déterminer si la mise à jour est déjà installée.

- Produit Msi installé : Vérifie dans la base de registre si le produit est déjà installé en ce basant sur le code MSI.
- Architecture du Processeur : Détermine si le processeur est de type x86, x64 ou IA64.



Cliquez sur 'Suivant' pour passer à la prochaine étape.</value>
  </data>
  <data name="DescriptionRuleMsiProductInstalled" xml:space="preserve">
    <value>Indiquez içi les informations concernant le produit Msi à recherché.  Les champs en caractères gras sont obligatoires.

Code Msi (Obligatoire) : Code du produit Msi au format 12345678-1234-1234-1234-1234566789012
Inverser la règle : Vérifiera que le produit n'est PAS installé.
Version Max. (Facultatif) : Spécifie un numéro de version maximal pour le produit installé.
Version Min. (Facultatif) : Spécifie un numéro de version minimal pour le produit installé.
Language (Facultatif) : Spécifie la langue dans la quelle le produit doit être installé.</value>
  </data>
  <data name="DescriptionRuleProcessorArchitecture" xml:space="preserve">
    <value>Indiquez sur quel architecture le produit peut-être installé.</value>
  </data>
  <data name="FileCreated" xml:space="preserve">
    <value>Date de création du fichier</value>
  </data>
  <data name="FileCreatedPrependRegSz" xml:space="preserve">
    <value>Date de création du fichier préfixer par Registre</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>Fichier existe</value>
  </data>
  <data name="FileExistsPrependRegSz" xml:space="preserve">
    <value>Fichier existe préfixer par Registre</value>
  </data>
  <data name="FileModified" xml:space="preserve">
    <value>Date de modification du fichier</value>
  </data>
  <data name="FileModifiedPrependRegSz" xml:space="preserve">
    <value>Date de modification du fichier préfixer par Registre</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>Taille du fichier</value>
  </data>
  <data name="FileSizePrependRegSz" xml:space="preserve">
    <value>Taille du fichier préfixer par Registre</value>
  </data>
  <data name="FileVersion" xml:space="preserve">
    <value>Version du fichier</value>
  </data>
  <data name="FileVersionPrependRegSz" xml:space="preserve">
    <value>Version du fichier préfixer par Registre</value>
  </data>
  <data name="FinishedPublishing" xml:space="preserve">
    <value>Publication terminée</value>
  </data>
  <data name="GetPublisher" xml:space="preserve">
    <value>Récupération du Publisher</value>
  </data>
  <data name="MsiApplicationInstallable" xml:space="preserve">
    <value>Application Msi installable</value>
  </data>
  <data name="MsiApplicationInstalled" xml:space="preserve">
    <value>Application Msi installé</value>
  </data>
  <data name="MsiApplicationSuperseded" xml:space="preserve">
    <value>Application Msi remplacée</value>
  </data>
  <data name="MsiComponentInstalledForProduct" xml:space="preserve">
    <value>Composant MSi installé pour le produit</value>
  </data>
  <data name="MsiFeatureInstalledForProduct" xml:space="preserve">
    <value>Fonctionnalité Msi installée pour le produit</value>
  </data>
  <data name="MsiPatchInstallable" xml:space="preserve">
    <value>Patch Msp installable</value>
  </data>
  <data name="MsiPatchinstalled" xml:space="preserve">
    <value>Patch Msp installé</value>
  </data>
  <data name="MsiPatchInstalledForProduct" xml:space="preserve">
    <value>Patch Msp installé pour le produit</value>
  </data>
  <data name="MsiPatchSuperseded" xml:space="preserve">
    <value>Patch Msp remplacé</value>
  </data>
  <data name="MsiProductInstalled" xml:space="preserve">
    <value>Produit Msi Installé</value>
  </data>
  <data name="NumberOfProcessor" xml:space="preserve">
    <value>Nombre de processeur</value>
  </data>
  <data name="PopulatePackage" xml:space="preserve">
    <value>Création du package</value>
  </data>
  <data name="Processor" xml:space="preserve">
    <value>Architecture du processeur</value>
  </data>
  <data name="RegDword" xml:space="preserve">
    <value>Valeur Dword du Registre</value>
  </data>
  <data name="RegExpendSz" xml:space="preserve">
    <value>Valeur de la chaine extensible du Registre</value>
  </data>
  <data name="RegKeyExists" xml:space="preserve">
    <value>Clé de Registre existe</value>
  </data>
  <data name="RegKeyLoop" xml:space="preserve">
    <value>Valeur de toutes les sous clés</value>
  </data>
  <data name="RegSz" xml:space="preserve">
    <value>Valeur de la chaine du Registre</value>
  </data>
  <data name="RegSzToVersion" xml:space="preserve">
    <value>Valeur de la chaine du Registre en tant que version</value>
  </data>
  <data name="SavingPackage" xml:space="preserve">
    <value>Sauvegarde du package</value>
  </data>
  <data name="WindowsLanguage" xml:space="preserve">
    <value>Langue de Windows</value>
  </data>
  <data name="WindowsVersion" xml:space="preserve">
    <value>Version de Windows</value>
  </data>
  <data name="WmiQuery" xml:space="preserve">
    <value>Requette Wmi</value>
  </data>
  <data name="ComparisonEqualTo" xml:space="preserve">
    <value>Egal à</value>
  </data>
  <data name="ComparisonGreaterThan" xml:space="preserve">
    <value>Supérieur à</value>
  </data>
  <data name="ComparisonGreaterThanOrEqualTo" xml:space="preserve">
    <value>Supérieur ou égal à</value>
  </data>
  <data name="ComparisonLessThan" xml:space="preserve">
    <value>Inférieur à</value>
  </data>
  <data name="ComparisonLessThanOrEqualTo" xml:space="preserve">
    <value>Inférieur ou égal à</value>
  </data>
  <data name="DescriptionRuleWindowsVersion" xml:space="preserve">
    <value>Indiquez la version de Windows sur laquelle le produit peut-être installé.

Vous devez paramétrer au moins 'Version Majeur' et/ou 'Produit'.

Attention : Un controleur de domaine apparaitra avec un 'Produit' = 'Controleur de domaine' et non pas 'Serveur'

Comparaison : Opérateur logique de comparaison. Par défaut, l'opérateur est 'Egal à'.

Sélection facile : Présélections à votre disposition.

Version Majeur : Version majeur du système d'exploitation.

Version Mineur : Version mineur du système d'exploitation.

Build Number : Build du système d'exploitation.

Produit : Détermine si il s'agit d'une station de travail, d'un serveur ou d'un controleur de domaine.

Service Pack Majeur : Version majeur du service pack.

Service Pack Mineur : Version mineur du service pack.</value>
  </data>
  <data name="DescriptionWindowsLanguage" xml:space="preserve">
    <value>Sélectionnez la langue dans laquelle Windows doit-être installé.

Attention : Dans le cas d'une version multilangue de Windows, cette règle sera toujours évalué à 'Vrai'.</value>
  </data>
  <data name="DescriptionFileExists" xml:space="preserve">
    <value>Dossier Standard (Optionnel) : Liste de dossier pré-définis dont l'emplacement peut varier d'un OS à l'autre.
Chemin vers le fichier (Obligatoire) : Chemin complet vers le fichier à rechercher (260 caractères max.).
Version (Optionnel) : Version du fichier.
Date de Création (Optionnel) : Date de création du fichier.
Date de Modification (Optionnel) : Date de modification du fichier.
Taille (Optionnel) : Taille en octet du fichier.
Language (Optionnel) : Language du fichier.</value>
  </data>
  <data name="DescriptionFileVersion" xml:space="preserve">
    <value>Indiquez içi les informations concernant le fichier à vérifier et ca version.

Dossier Standard (Optionnel) : Liste de dossier pré-définis dont l'emplacement peut varier d'un OS à l'autre.
Chemin vers le fichier (Obligatoire) : Chemin complet vers le fichier à rechercher (260 caractères max.).
Version (Obligatoire) : Version du fichier.</value>
  </data>
</root>