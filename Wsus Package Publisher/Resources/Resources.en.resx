<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArrivalDate" xml:space="preserve">
    <value>Arrival Date</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="DescriptionInformationsWizard" xml:space="preserve">
    <value>Indicate here the informations about the update. Fields in bold are required.

Vendor Name (Required): It is here that you define the name of the publisher of the update. For example: Oracle, Sun, Symantec, Adobe ...

Product Name (Required): Name of the upgraded product. For example: Java, Endpoint Protection 12, Flash Player ...

Title (Required): It is here that you define the title of the update. For example: Java 6 update 31, Symantec Endpoint Protection 12.1 MP1 RU1, Flash Player 11.2.0.233 ...

Description (Required): You can specify here information about the update. Such as, improvements, and bug fixes ...

More Info URL (Optional): Specify here a URL to a web page giving more information about the update.

Support URL (Optional): Specify here a URL to a web page support.

May require action by the user: Check the box if the update can request a user action.

Requires a network connection: Check if the update requires the network to install.

Classification:

Impact:

Restart behavior: Specify whether the need to update or not to restart the job to complete installation.

Id Security Bulletin (Optional): Specify the ID of the security bulletin provided by the publisher.

MSRC severity (Optional): Specify the MSRC code provided by the publisher.

CVE Id (Optional): Specify the CVE code provided by the publisher.

KB Article Id (Optional): Specify the number of KB article.


 Click 'Next' to proceed to the next step.</value>
  </data>
  <data name="DescriptionIsInstallableWizard" xml:space="preserve">
    <value>Indicate here the rule or rules that allow clients computer to determine if the update is installable.

 - Msi Product installed: Checks in the registry if the product is already installed based on MSI code.
 - Processor Architecture: Determines whether the processor is x86, x64 or IA64.


 Click 'Next' to proceed to the next step.</value>
  </data>
  <data name="DescriptionIsInstalledWizard" xml:space="preserve">
    <value>Indicate here the rule or rules that allow clients computer to determine if the update is already installed.

 - Msi Product installed: Checks in the registry if the product is already installed based on MSI code.
 - Processor Architecture: Determines whether the processor is x86, x64 or IA64.



 Click 'Next' to proceed to the next step.</value>
  </data>
  <data name="DescriptionRuleMsiProductInstalled" xml:space="preserve">
    <value>Indicate here informations on the Msi product. Fields in bold are required.

Msi code (required): Msi Product Code in format 12345678-1234-1234-1234-1234566789012
Reverse the rule: Verify that the product is NOT installed.
Max version. (Optional): Specifies a maximum version number for the installed product.
Version Min. (Optional): Specifies a minimum version number for the installed product.
Language (Optional): Specifies the language in which the product must be installed.</value>
  </data>
  <data name="DescriptionRuleProcessorArchitecture" xml:space="preserve">
    <value>Indicate on whitch processor architecture the product can be installed.</value>
  </data>
  <data name="DescriptionUpdateFileWizard" xml:space="preserve">
    <value>Indicate here the file  or files to create the update. Fields in bold are required.

File update (Required): Select a msi, msp or exe file corresponding to the binary update.

Additional files (Optional): Select a file or files needed for the application of the update. For example configuration files or answer file.

Command line (Optional): Indicate one or more parameters for the file update. Eg /q /s or /silent. For Msi file it is not necessary to specify the option to make the installation silent. Wsus does it automatically.

Return codes (Optional) : Only for .EXE files. Meaning of the code return at the end of the installation.

Click 'Next' to proceed to the next step.</value>
  </data>
  <data name="FileCreated" xml:space="preserve">
    <value>File Created Date</value>
  </data>
  <data name="FileCreatedPrependRegSz" xml:space="preserve">
    <value>File Created Prepend RegSz</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>File Exists</value>
  </data>
  <data name="FileExistsPrependRegSz" xml:space="preserve">
    <value>File Exists Prepend RegSz</value>
  </data>
  <data name="FileModified" xml:space="preserve">
    <value>File Modified Date</value>
  </data>
  <data name="FileModifiedPrependRegSz" xml:space="preserve">
    <value>File Modified Prepend RegSz</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>File Size</value>
  </data>
  <data name="FileSizePrependRegSz" xml:space="preserve">
    <value>File Size Prepend RegSz</value>
  </data>
  <data name="FileVersion" xml:space="preserve">
    <value>File Version</value>
  </data>
  <data name="FileVersionPrependRegSz" xml:space="preserve">
    <value>File Version Prepend RegSz</value>
  </data>
  <data name="FinishedPublishing" xml:space="preserve">
    <value>Sucessfull Publishing</value>
  </data>
  <data name="GetPublisher" xml:space="preserve">
    <value>Get Publisher</value>
  </data>
  <data name="GroupEnd" xml:space="preserve">
    <value>&lt;End </value>
  </data>
  <data name="GroupStart" xml:space="preserve">
    <value>&lt;Start </value>
  </data>
  <data name="MsiApplicationInstallable" xml:space="preserve">
    <value>Msi Application Installable</value>
  </data>
  <data name="MsiApplicationInstalled" xml:space="preserve">
    <value>Msi Application Installed</value>
  </data>
  <data name="MsiApplicationSuperseded" xml:space="preserve">
    <value>Msi Application Superseded</value>
  </data>
  <data name="MsiComponentInstalledForProduct" xml:space="preserve">
    <value>MSi Component Installed For Product</value>
  </data>
  <data name="MsiFeatureInstalledForProduct" xml:space="preserve">
    <value>Msi Feature Installed for Product</value>
  </data>
  <data name="MsiPatchInstallable" xml:space="preserve">
    <value>Msi Patch Installable</value>
  </data>
  <data name="MsiPatchinstalled" xml:space="preserve">
    <value>Msi Patch Installed</value>
  </data>
  <data name="MsiPatchInstalledForProduct" xml:space="preserve">
    <value>Msi Patch Installed For Product</value>
  </data>
  <data name="MsiPatchSuperseded" xml:space="preserve">
    <value>Msi Patch Superseded</value>
  </data>
  <data name="MsiProductInstalled" xml:space="preserve">
    <value>Msi Product Installed</value>
  </data>
  <data name="NumberOfProcessor" xml:space="preserve">
    <value>Number Of Processor</value>
  </data>
  <data name="openFileDialogueUpdateFile" xml:space="preserve">
    <value>All accepted files|*.msi;*.msp;*.exe|MSI Files|*.msi|MSP Files|*.msp|EXE Files|*.exe</value>
  </data>
  <data name="PopulatePackage" xml:space="preserve">
    <value>Populate Package</value>
  </data>
  <data name="Processor" xml:space="preserve">
    <value>Processor Architecture</value>
  </data>
  <data name="RegDword" xml:space="preserve">
    <value>Reg Dword</value>
  </data>
  <data name="RegExpendSz" xml:space="preserve">
    <value>Reg Expend Sz</value>
  </data>
  <data name="RegKeyExists" xml:space="preserve">
    <value>Reg Key Exists</value>
  </data>
  <data name="RegKeyLoop" xml:space="preserve">
    <value>Value Of Every sub Reg Key</value>
  </data>
  <data name="RegSz" xml:space="preserve">
    <value>Reg Sz</value>
  </data>
  <data name="RegSzToVersion" xml:space="preserve">
    <value>Reg Sz To Version</value>
  </data>
  <data name="RuleAnd" xml:space="preserve">
    <value>AND</value>
  </data>
  <data name="RuleOR" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="SavingPackage" xml:space="preserve">
    <value>Saving Package</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="WindowsLanguage" xml:space="preserve">
    <value>Windows Language</value>
  </data>
  <data name="WindowsVersion" xml:space="preserve">
    <value>Windows Version</value>
  </data>
  <data name="WmiQuery" xml:space="preserve">
    <value>Wmi Query</value>
  </data>
  <data name="ComparisonEqualTo" xml:space="preserve">
    <value>Equal To</value>
  </data>
  <data name="ComparisonGreaterThan" xml:space="preserve">
    <value>Greater Than</value>
  </data>
  <data name="ComparisonGreaterThanOrEqualTo" xml:space="preserve">
    <value>Greater Than Or Equal To</value>
  </data>
  <data name="ComparisonLessThan" xml:space="preserve">
    <value>Less Than</value>
  </data>
  <data name="ComparisonLessThanOrEqualTo" xml:space="preserve">
    <value>Less Than Or Equal To</value>
  </data>
  <data name="DescriptionRuleWindowsVersion" xml:space="preserve">
    <value>Indicate the version of Windows on which the product can be installed.

You must set at least 'Major Version' and/or 'Product Type'.

Caution: A domain controller appear with a 'product' = 'domain controller' and not 'Server'.

Comparison: Logical operator comparison. By default, the operator is 'Equal To'.

Easy Selection : Presets at your disposal.

Major Version: Major version of the operating system.

Minor Revision: Minor version of the operating system.

Build Number: Build of the Operating System.

Product: Determines whether this is a workstation, server or domain controller.

Service Pack Major: Major service pack version.

Service Pack Minor: Minor service pack version.</value>
  </data>
  <data name="DescriptionWindowsLanguage" xml:space="preserve">
    <value>Rule based on the Windows installation language. Select the language in which Windows must be installed.

Warning : In case of a multilanguage installation of Windows, this rule will always be evaluated to 'True'.</value>
  </data>
  <data name="DescriptionFileExists" xml:space="preserve">
    <value>Known folder (Optional): List of predefined folder whose location may vary from one OS to another.
File Path (Required): Full path to the file search (260 characters max.).
File Version (optional): File Version.
Creation Date (Optional): Creation date of the file.
Modified Date (Optional): Modified date of the file.
File Size (Optional): Size in bytes of the file.
Language (optional): Language of the file.</value>
  </data>
  <data name="DescriptionFileVersion" xml:space="preserve">
    <value>Indicate here the information about the file and verify that version.

Standard folder (Optional): List of predefined file whose location may vary from one OS to another.
Path to the file (Required): Full path to the file search (260 characters max.).
Version (mandatory): File Version.</value>
  </data>
  <data name="NoDescription" xml:space="preserve">
    <value>No description available.</value>
  </data>
  <data name="UpdatePublished" xml:space="preserve">
    <value>The update has been published.</value>
  </data>
  <data name="Decline" xml:space="preserve">
    <value>Decline</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DescriptionFileCreated" xml:space="preserve">
    <value>Indicate here the information about the file and verify that creation date.

Standard folder (Optional): List of predefined file whose location may vary from one OS to another.
Path to the file (Required): Full path to the file search (260 characters max.).</value>
  </data>
  <data name="DescriptionFileVersionPrependRegSz" xml:space="preserve">
    <value>Indicate here the information about the file and verify that version.

Standard folder (Optional): List of predefined file whose location may vary from one OS to another.
Path to the file (Required): Full path to the file search (260 characters max.).
Version (mandatory): File Version.</value>
  </data>
  <data name="Expire" xml:space="preserve">
    <value>Expire</value>
  </data>
  <data name="updates" xml:space="preserve">
    <value>Updates</value>
  </data>
  <data name="WsusConnectionException" xml:space="preserve">
    <value>Failed to connect to the server. Verify that the server is started and connection parameters are valid.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AllButInstalled" xml:space="preserve">
    <value>Applicable, but not installed</value>
  </data>
  <data name="Downloaded" xml:space="preserve">
    <value>Downloaded</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="Installed" xml:space="preserve">
    <value>Installed</value>
  </data>
  <data name="InstalledPendingReboot" xml:space="preserve">
    <value>Installed, Pending Reboot</value>
  </data>
  <data name="NotApplicable" xml:space="preserve">
    <value>Not Applicable</value>
  </data>
  <data name="NotApproved" xml:space="preserve">
    <value>Not Approved</value>
  </data>
  <data name="NotInstalled" xml:space="preserve">
    <value>Not Installed</value>
  </data>
  <data name="Uninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="EditGroupTypeAnd" xml:space="preserve">
    <value>Do you want to link rules by logical operator "And" ?</value>
  </data>
  <data name="EditGroupTypeOr" xml:space="preserve">
    <value>Do you want to link rules by logical operator "Or" ?</value>
  </data>
  <data name="Publish" xml:space="preserve">
    <value>P&amp;ublish</value>
  </data>
  <data name="Revise" xml:space="preserve">
    <value>Revise</value>
  </data>
  <data name="UpdateRevised" xml:space="preserve">
    <value>Update revised.</value>
  </data>
  <data name="ApproveForUninstallation" xml:space="preserve">
    <value>Approval For Uninstallation</value>
  </data>
  <data name="ApproveForInstallation" xml:space="preserve">
    <value>Approve For Installation</value>
  </data>
  <data name="ApproveForOptionalInstallation" xml:space="preserve">
    <value>Approve For Optional Installation</value>
  </data>
  <data name="Unchanged" xml:space="preserve">
    <value>Unchanged</value>
  </data>
  <data name="NeedServerSettings" xml:space="preserve">
    <value>You need to provide settings for, at least, one server.</value>
  </data>
  <data name="CertificateSuccessfullyGenerate" xml:space="preserve">
    <value>The certificate has been successfully generated.</value>
  </data>
  <data name="CertificateSuccessfullyLoaded" xml:space="preserve">
    <value>The certificate has been successfully loaded.</value>
  </data>
  <data name="CertificateSuccessfullySaved" xml:space="preserve">
    <value>The certificate has been successfully saved.</value>
  </data>
  <data name="ConnectToWsusFirst" xml:space="preserve">
    <value>Connect to Wsus server first.</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approuved</value>
  </data>
  <data name="Declined" xml:space="preserve">
    <value>Declined</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="Resign" xml:space="preserve">
    <value>Resign</value>
  </data>
  <data name="ResignPackageFailed" xml:space="preserve">
    <value>Resign package failed with error</value>
  </data>
  <data name="SuccessfullyResignPackage" xml:space="preserve">
    <value>Package successfully resigned.</value>
  </data>
  <data name="Superseded" xml:space="preserve">
    <value>Superseded</value>
  </data>
  <data name="ReplicaServer" xml:space="preserve">
    <value>Replica</value>
  </data>
  <data name="connecting" xml:space="preserve">
    <value>Connecting...</value>
  </data>
  <data name="FailToConnectToServer" xml:space="preserve">
    <value>Fail to connect to the server.</value>
  </data>
  <data name="CommandSended" xml:space="preserve">
    <value>Command sended.</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Error.</value>
  </data>
  <data name="Noping" xml:space="preserve">
    <value>No Ping.</value>
  </data>
  <data name="Pinging" xml:space="preserve">
    <value>Pinging</value>
  </data>
  <data name="SendingCommand" xml:space="preserve">
    <value>Sending Command...</value>
  </data>
  <data name="DescriptionFileExistsPrependRegSz" xml:space="preserve">
    <value>Hkey_Local_Machine (Mandatory) : Hive of the registry where is the name of the directory.
Value (Mandatory): Name of the registry key where is the name of th directory.
File Name (Mandatory) : Name of the file to search for (260 char. max.).
File Version (Optional) : Version of the file.
Creation Date (Optional) : Creation date of the file.
Modified Date (Optional) : Modification date of the file.
Size (Optional) : Size of the file (bytes).
Language (Optional) : Language of the file.</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="Succeeded" xml:space="preserve">
    <value>Succeeded</value>
  </data>
</root>