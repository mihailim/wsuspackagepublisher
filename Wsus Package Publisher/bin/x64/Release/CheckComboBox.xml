<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CheckComboBox</name>
    </assembly>
    <members>
        <member name="F:EasyCompany.Controls.Separator.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.Separator.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:EasyCompany.Controls.Separator.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="F:EasyCompany.Controls.CheckComboBox.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.AddItem(System.Object)">
            <summary>
            Add an Item to the list.
            </summary>
            <param name="itemToAdd">Item to add to the list. Can't be null.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.RemoveItem(System.Object)">
            <summary>
            Remove an Item from the list.
            </summary>
            <param name="itemToRemove">Item to remove. If several objects in the list corresponds to the parameter, only the first one is remove.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.RemoveItem(System.Int32)">
            <summary>
            Remove an Item from the list.
            </summary>
            <param name="index">Index of the item to remove.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.GetItemState(System.Object)">
            <summary>
            Return whether or ot an Item is selected.
            </summary>
            <param name="item">Item to look for.</param>
            <returns>True if the Item is selected.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.GetItemState(System.Int32)">
            <summary>
            Return whether or ot an Item is selected.
            </summary>
            <param name="index">Index of the Item to look for.</param>
            <returns>True if the Item is selected.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.ClearItems">
            <summary>
            Remove all items from the list.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.SelectItem(System.Object,System.Boolean)">
            <summary>
            Select the Item corresponding to the parameter.
            </summary>
            <param name="objectToSelect">Object to select.</param>
            <param name="state">State to put the Item. True to select it.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Select the Item by his index.
            </summary>
            <param name="index">Index of the Item to select.</param>
            <param name="state">State to put the Item. True to select it.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.AddShortcut(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            Add a Shortcut to the DropDownMenu.
            </summary>
            <param name="shortcutName">Name of the Shortcut.</param>
            <param name="items">List of Items that are already in the DropDownMenu. Missing Items will be ignored.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.SelectShortcut(System.String,System.Boolean)">
            <summary>
            Change the checkState of a Shortcut.
            </summary>
            <param name="shortcutName">Name of the Shortcut to change.</param>
            <param name="state">New state of the Shortcut.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.RemoveShortcut(System.String)">
            <summary>
            Remove the Shortcut by the Name.
            </summary>
            <param name="shortcutName">Name of the Shortcut to remove.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.OnClick(System.EventArgs)">
            <summary>
            Call after a click on the control. Hide or show the dropdownmenu, depending on the location of the click and the 'DropDown' property.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckComboBox.OnSizeChanged(System.EventArgs)">
            <summary>
            Call after the size of the control was change. Resize the dropdownmenu to match the sizing policy of the control.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="P:EasyCompany.Controls.CheckComboBox.SelectedItems">
            <summary>
            Get the list of Selected Items.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckComboBox.Items">
            <summary>
            Get the complete list of items.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckComboBox.DropDown">
            <summary>
            Get or Set if the dropDown menu is down.
            </summary>
        </member>
        <member name="E:EasyCompany.Controls.CheckComboBox.ItemAdded">
            <summary>
            This event is fire after an Item have been added to the list.
            </summary>
        </member>
        <member name="E:EasyCompany.Controls.CheckComboBox.ItemRemoved">
            <summary>
            This event is fire after an Item have been removed from the list.
            </summary>
        </member>
        <member name="E:EasyCompany.Controls.CheckComboBox.ItemsCleared">
            <summary>
            This event is fire after the list was clear.
            </summary>
        </member>
        <member name="E:EasyCompany.Controls.CheckComboBox.SelectionChanged">
            <summary>
            This event is fire after an the Selection was changed.
            </summary>
        </member>
        <member name="T:EasyCompany.Controls.CheckComboBox.ItemAddedEventHandler">
            <summary>
            EventHandler for the ItemAdded Event.
            </summary>
            <param name="AddedItem">Item that have been added to the list.</param>
        </member>
        <member name="T:EasyCompany.Controls.CheckComboBox.ItemRemovedEventHandler">
            <summary>
            EventHandler for the ItemRemoved Event.
            </summary>
            <param name="RemovedItem">Item that have been removed from the list.</param>
        </member>
        <member name="T:EasyCompany.Controls.CheckComboBox.ItemsClearedEventHandler">
            <summary>
            EventHandler for the ItemsClear Event.
            </summary>
        </member>
        <member name="T:EasyCompany.Controls.CheckComboBox.SelectionChangedEventHandler">
            <summary>
            EventHandler for the SelectionChanged Event.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.AddItem(System.Object)">
            <summary>
            Add an Item to the DropDownMenu.
            </summary>
            <param name="itemToAdd">Object to add to the DropDownMenu. Can't be null.</param>
            <returns>True if the object have been added.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.RemoveItem(System.Object)">
            <summary>
            Remove an object from the DropDownMenu.
            </summary>
            <param name="itemToRemove">Object to remove. If several objects in the DropDownMenu corresponds to the parameter, only the first one is remove.</param>
            <returns>Return true if the object have been removed.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.RemoveItem(System.Int32)">
            <summary>
            Remove an object from the DropDownMenu.
            </summary>
            <param name="index">Index of the object to remove.</param>
            <returns>Return true if the object have been removed.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.GetItemState(System.Object)">
            <summary>
            Return the state of an Item.
            </summary>
            <param name="itemToFind">Item for which to find the state.</param>
            <returns>True if the checkbox of this item is checked.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.GetItemState(System.Int32)">
            <summary>
            Return the state of an Item.
            </summary>
            <param name="indexToFind">Index of the Item for which to find the state.</param>
            <returns>True if the checkbox of this item is checked.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.ClearItems">
            <summary>
            Remove all Items from the DropDownMenu.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.SelectItem(System.Object,System.Boolean)">
            <summary>
            Select the Item corresponding to the parameter.
            </summary>
            <param name="objectToSelect">Object to select.</param>
            <param name="selectedState">New state of the object.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Select the Item by his index.
            </summary>
            <param name="index">Index of the Item to select.</param>
            <param name="selectedState">New state of the object.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.AddShortcut(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            Add a Shortcut to the 'Shortcut area' of the DropDownMenu.
            </summary>
            <param name="shortcutName">Name of the Shortcut.</param>
            <param name="items">List of item already in the DropDownMenu.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.SelectShortcut(System.String,System.Boolean)">
            <summary>
            Change the state of the checkbox of a Shortcut.
            </summary>
            <param name="shortcutName">Name of the Shortcut to change.</param>
            <param name="state">New state of the Shortcut.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.RemoveShortcut(System.String)">
            <summary>
            Remove a shortcut by his Name.
            </summary>
            <param name="shortcutName">Name of the shortcut to remove.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.IsInItemsList(System.Object)">
            <summary>
            Compare 'itemToSearch' to each item in the itemsList. Return true if find.
            </summary>
            <param name="itemToSearch">Item that will be compare to each item in the itemsList.</param>
            <returns>True if an equal object was found, false else.</returns>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.RemoveShortcut(EasyCompany.Controls.CheckDropDownMenu.InternalData)">
            <summary>
            Remove all shortcuts containing this item.
            </summary>
            <param name="itemIncludeToShortcut">Item that must be include to a shortcut.</param>
        </member>
        <member name="F:EasyCompany.Controls.CheckDropDownMenu.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckDropDownMenu.Items">
            <summary>
            Get the list of Items in the DropDownMenu.
            </summary>
        </member>
        <member name="T:EasyCompany.Controls.CheckDropDownMenu.Shortcut">
            <summary>
            Internal Structure describing a Shortcut.
            </summary>
        </member>
        <member name="M:EasyCompany.Controls.CheckDropDownMenu.Shortcut.CheckState">
            <summary>
            Check the checkBox if all checkbox in Items are checked.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckDropDownMenu.Shortcut.Name">
            <summary>
            Name of the Shortcut. It is display in the DropDownMenu.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckDropDownMenu.Shortcut.Index">
            <summary>
            Index of the Shortcut. This is the place, in the DropDownMenu, where it is display.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckDropDownMenu.Shortcut.ChkBox">
            <summary>
            This Checkbox is display on the DropdownMenu.
            </summary>
        </member>
        <member name="P:EasyCompany.Controls.CheckDropDownMenu.Shortcut.Items">
            <summary>
            List of InternalData, contening Items associate to this Shortcut.
            </summary>
        </member>
    </members>
</doc>
